/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.attech.asd.administrator.views;

import com.attech.asd.administrator.AppContext;
import com.attech.asd.administrator.common.CustomDialog;
import com.attech.asd.database.SensorsDao;
import com.attech.asd.database.common.ActionRequest;
import com.attech.asd.database.common.Command;
import com.attech.asd.database.entities.SensorLogs;
import com.attech.asd.database.entities.Sensors;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author AnhTH
 */
public class ReceiverDialog extends CustomDialog {

    private Sensors sensor;
    private boolean running;
    final String items1[] = {"UNICAST", "MULTICAST"};
    final private DefaultComboBoxModel receivingMode = new DefaultComboBoxModel(items1);

    final String items2[] = {"ADS-B", "RADAR"};
    final private DefaultComboBoxModel sensorType = new DefaultComboBoxModel(items2);

    /**
     * Creates new form ReceiverDialog
     *
     * @param parent
     * @param modal
     * @param handle
     */
    public ReceiverDialog(java.awt.Frame parent, boolean modal, boolean running, int sic, int no) {
        super(parent, modal);
        initComponents();
//        try {
//            Thread.sleep(AppContext.getRefreshTime());
//        } catch (InterruptedException ex) {
//            ExceptionHandler.handle(ex);
//        }
        cbReceivingMode.removeAllItems();
        cbReceivingMode.setModel(receivingMode);

        cbSensorType.removeAllItems();
        cbSensorType.setModel(sensorType);

        this.sensor = new SensorsDao().getSensorBySic(sic);
        this.running = running;
        binding(no);
        updateStatus();
    }

    private void binding(int no) {
        this.lblNo.setText(String.format("%s", no));
        this.lblSIC.setText(String.format("%s", sensor.getSic()));
        this.cbReceivingMode.setSelectedIndex(receivingMode.getIndexOf(sensor.getReceivingMode()));
        this.lblBindingAddress.setText(String.format("%s", sensor.getReceivingBindIp()));
        this.lblBufferSize.setText(String.format("%s", sensor.getBufferSize()));
        this.lblMulticastAddress.setText(String.format("%s", sensor.getReceivingMulticastAddress()));
        this.lblPort.setText(String.format("%s", sensor.getReceivingPort()));
        this.lblLatitude.setText(String.format("%s", sensor.getLatitude()));
        this.lblLongitude.setText(String.format("%s", sensor.getLongitude()));
        this.cbSensorType.setSelectedIndex((sensor.getSensorMode() == 1) ? 0 : 1);
    }

    private void updateStatus() {
        this.lblStatus.setText(isRunning() ? "Active" : "Inactive");
        this.btnStart.setEnabled(!isRunning());
        this.btnStop.setEnabled(isRunning());
        this.btnEdit.setEnabled(!isRunning());
        this.btnDelete.setEnabled(!running);
        
        this.cbReceivingMode.setEnabled(false);
        this.cbSensorType.setEnabled(false);
        
        if (!AppContext.getInstance().connectToServer){
            btnStart.setEnabled(false);
            btnStop.setEnabled(false);
            btnDelete.setEnabled(false);
            btnEdit.setEnabled(false);
        }
    }

    private void requestToServer(ActionRequest cmd, Integer id) {
        final List<Object> objs = new ArrayList<>();
        Command command = new Command();
        command.setCmd(cmd);
        objs.add(id);
        command.setParams(objs);
        if (AppContext.getInstance().getCommandSocket() != null && AppContext.getInstance().getCommandSocket().isConnected())
            AppContext.getInstance().getCommandSocket().setCommand(command);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblNo = new javax.swing.JLabel();
        lblSIC = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblPort = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblMulticastAddress = new javax.swing.JLabel();
        lblBindingAddress = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        lblBufferSize = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        cbSensorType = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        lblLongitude = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblLatitude = new javax.swing.JLabel();
        cbReceivingMode = new javax.swing.JComboBox<>();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Receiver Dialog -  ADSB Administrator Terminal 1.0.0");
        setResizable(false);

        jLabel1.setText("#");

        lblNo.setText("10");
        lblNo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblNo.setMaximumSize(new java.awt.Dimension(50, 20));
        lblNo.setMinimumSize(new java.awt.Dimension(50, 20));
        lblNo.setPreferredSize(new java.awt.Dimension(16, 25));

        lblSIC.setText("10");
        lblSIC.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblSIC.setMaximumSize(new java.awt.Dimension(50, 20));
        lblSIC.setMinimumSize(new java.awt.Dimension(50, 20));
        lblSIC.setPreferredSize(new java.awt.Dimension(16, 25));

        jLabel4.setText("SIC");

        jLabel7.setText("Status");

        lblStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblStatus.setPreferredSize(new java.awt.Dimension(16, 25));

        jLabel9.setText("Listening port");

        lblPort.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblPort.setPreferredSize(new java.awt.Dimension(16, 25));

        jLabel11.setText("Mode");

        jLabel13.setText("Multicast Address");

        lblMulticastAddress.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblMulticastAddress.setPreferredSize(new java.awt.Dimension(16, 25));

        lblBindingAddress.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblBindingAddress.setPreferredSize(new java.awt.Dimension(16, 25));

        jLabel16.setText("Binding Address");

        jLabel17.setText("Buffer size");

        lblBufferSize.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblBufferSize.setPreferredSize(new java.awt.Dimension(16, 25));

        jLabel21.setText("Sensors Type");

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/attech/asd/administrator/images/door_out.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/attech/asd/administrator/images/bullet_lightning_black.png"))); // NOI18N
        btnStop.setText("Deactive");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/attech/asd/administrator/images/bullet_lightning.png"))); // NOI18N
        btnStart.setText("Active");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        cbSensorType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADS-B", "RADAR" }));

        jLabel18.setText("Longitude");

        lblLongitude.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblLongitude.setPreferredSize(new java.awt.Dimension(16, 25));

        jLabel20.setText("Latitude");

        lblLatitude.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblLatitude.setPreferredSize(new java.awt.Dimension(16, 25));

        cbReceivingMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UNICAST", "MULTICAST" }));

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/attech/asd/administrator/images/edit_1.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/attech/asd/administrator/images/delete1.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSIC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblLongitude, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(lblLatitude, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbSensorType, 0, 184, Short.MAX_VALUE)
                                    .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(lblPort, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(lblMulticastAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(lblBindingAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(lblBufferSize, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(cbReceivingMode, 0, 184, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel7)
                            .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cbReceivingMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblMulticastAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblBindingAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblBufferSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(cbSensorType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnStop)
                    .addComponent(btnStart)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        final int result = JOptionPane.showConfirmDialog(rootPane, "Are you sure ?");
        if (result != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            requestToServer(ActionRequest.DEACTIVE_RECEIVER, sensor.getId());
            SensorLogs logs = new SensorLogs(sensor,String.format("(%s) Request to deactive", AppContext.getInstance().getCommandSocket().getCurrentIp()), 1);
            logs.save();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } finally {
//            try {
//                Thread.sleep(AppContext.getRefreshTime());
//            } catch (InterruptedException ex) {
//                ExceptionHandler.handle(ex);
//            }
            this.dispose();
        }
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        final int result = JOptionPane.showConfirmDialog(rootPane, "Are you sure ?");
        if (result != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            requestToServer(ActionRequest.ACTIVE_RECEIVER, sensor.getId());
            SensorLogs logs = new SensorLogs(sensor,String.format("(%s) Request to active", AppContext.getInstance().getCommandSocket().getCurrentIp()), 1);
            logs.save();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } finally {
//            try {
//                Thread.sleep(AppContext.getRefreshTime());
//            } catch (InterruptedException ex) {
//                ExceptionHandler.handle(ex);
//            }
            this.dispose();
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        this.dispose();
        AddReceiver dialog = new AddReceiver(null, true, sensor.getSic());
        dialog.setVisible(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        final int result = JOptionPane.showConfirmDialog(rootPane, "Are you sure ?");
        if (result != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            SensorLogs logs = new SensorLogs(sensor,String.format("(%s) Request to delete", AppContext.getInstance().getCommandSocket().getCurrentIp()), 1);
            logs.save();
            requestToServer(ActionRequest.DELETE_RECEIVER, sensor.getId());
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JComboBox<String> cbReceivingMode;
    private javax.swing.JComboBox<String> cbSensorType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblBindingAddress;
    private javax.swing.JLabel lblBufferSize;
    private javax.swing.JLabel lblLatitude;
    private javax.swing.JLabel lblLongitude;
    private javax.swing.JLabel lblMulticastAddress;
    private javax.swing.JLabel lblNo;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblSIC;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the running
     */
    public boolean isRunning() {
        return running;
    }

    /**
     * @param running the running to set
     * 
     */
    public void setRunning(boolean running) {
        this.running = running;
    }
}
