/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.attech.adsb.client.gui.targetList;

import com.attech.adsb.client.common.MLogger;
import com.attech.adsb.client.common.Target;
import com.attech.adsb.client.common.TargetManager;
import com.attech.adsb.client.config.Point2f;
import com.attech.adsb.client.graphic.Convertor;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author ANDH
 */
public class TargetListDlg extends javax.swing.JDialog implements Runnable{
    
    private static final MLogger logger = MLogger.getLogger(TargetListDlg.class);

    /**
     * @param locatedNotify the locatedNotify to set
     */
    public void setLocatedNotify(ILocated locatedNotify) {
        this.locatedNotify = locatedNotify;
    }

    private TargetListModel model;
    private TargetManager targetManager;
    private final ScheduledExecutorService targetUpdateScheduler = Executors.newScheduledThreadPool(5);
    private ILocated locatedNotify;
    
    /**
     * Creates new form TargetList
     * @param parent
     * @param modal
     */
    public TargetListDlg(java.awt.Frame parent, boolean modal) {
	super(parent, modal);
	initComponents();
    }
    
    public TargetListDlg(java.awt.Frame parent, boolean modal, TargetManager targetManager) {
	super(parent, modal);
	initComponents();
	this.targetManager = targetManager;
	model = new TargetListModel(tblTargetList);
	model.createLineNumber();
        targetUpdateScheduler.scheduleAtFixedRate(this, 0, 10, TimeUnit.SECONDS);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTargetList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Target List");
        setMinimumSize(new java.awt.Dimension(700, 300));
        setPreferredSize(new java.awt.Dimension(700, 300));

        tblTargetList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTargetList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTargetListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTargetList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblTargetListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTargetListMouseClicked
        if (evt.getClickCount() != 2) {     // to detect doble click events
            return;
        }
        
        Target target = this.model.getSelectedTarget();
        if (target == null) return;
        
        Point2f location = Convertor.fromWGS842OpenGL(target.getPosition());
        this.locatedNotify.navigate(location.x, location.y);
    }//GEN-LAST:event_tblTargetListMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTargetList;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            List<Target> target = targetManager.getTargetList();
            model.update(target);
        } catch (Exception e) {
            logger.error(e);
        }
        
    }
}
